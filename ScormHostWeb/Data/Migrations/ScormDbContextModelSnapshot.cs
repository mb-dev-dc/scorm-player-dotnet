// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ScormHost.Web.Data;

#nullable disable

namespace ScormHostWeb.Data.Migrations
{
    [DbContext(typeof(ScormDbContext))]
    partial class ScormDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ScormHost.Web.Data.Models.ScormAttempt", b =>
                {
                    b.Property<Guid>("AttemptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AttemptNumber")
                        .HasColumnType("int");

                    b.Property<string>("AttemptStateJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CompletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompletionStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("not attempted");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastAccessedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LaunchData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LessonLocation")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("LessonMode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ScoreMax")
                        .HasColumnType("int");

                    b.Property<int?>("ScoreMin")
                        .HasColumnType("int");

                    b.Property<int?>("ScoreRaw")
                        .HasColumnType("int");

                    b.Property<double?>("ScoreScaled")
                        .HasColumnType("float");

                    b.Property<DateTime>("StartedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("SuccessStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("unknown");

                    b.Property<string>("SuspendData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("TotalTime")
                        .HasColumnType("time");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AttemptId");

                    b.HasIndex("CourseId");

                    b.HasIndex("UserId", "CourseId", "CompletedOn");

                    b.HasIndex("UserId", "CourseId", "StartedOn");

                    b.ToTable("Attempts");
                });

            modelBuilder.Entity("ScormHost.Web.Data.Models.ScormCourse", b =>
                {
                    b.Property<Guid>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LaunchScoId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PackagePath")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("ScormHost.Web.Data.Models.ScormSco", b =>
                {
                    b.Property<Guid>("ScoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LaunchFile")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ScoId");

                    b.HasIndex("CourseId");

                    b.ToTable("SCOs");
                });

            modelBuilder.Entity("ScormHost.Web.Data.Models.ScormUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ScormHost.Web.Data.Models.ScormAttempt", b =>
                {
                    b.HasOne("ScormHost.Web.Data.Models.ScormCourse", "Course")
                        .WithMany("Attempts")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ScormHost.Web.Data.Models.ScormUser", "User")
                        .WithMany("Attempts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ScormHost.Web.Data.Models.ScormSco", b =>
                {
                    b.HasOne("ScormHost.Web.Data.Models.ScormCourse", "Course")
                        .WithMany("Scos")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("ScormHost.Web.Data.Models.ScormCourse", b =>
                {
                    b.Navigation("Attempts");

                    b.Navigation("Scos");
                });

            modelBuilder.Entity("ScormHost.Web.Data.Models.ScormUser", b =>
                {
                    b.Navigation("Attempts");
                });
#pragma warning restore 612, 618
        }
    }
}
